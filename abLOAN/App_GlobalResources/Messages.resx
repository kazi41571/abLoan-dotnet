<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AlreadyExist" xml:space="preserve">
    <value>Record already exist.</value>
  </data>
  <data name="AlreadyInUse" xml:space="preserve">
    <value>Record can't be deleted because it is in use.</value>
  </data>
  <data name="CompareValidator" xml:space="preserve">
    <value>don't match</value>
  </data>
  <data name="DataLostWarning" xml:space="preserve">
    <value>Do you want to save the changes you made?</value>
  </data>
  <data name="DeleteAllFail" xml:space="preserve">
    <value>Failed to delete record(s).</value>
  </data>
  <data name="DeleteAllRecords" xml:space="preserve">
    <value>Delete {0} record(s)?</value>
  </data>
  <data name="DeleteAllSuccess" xml:space="preserve">
    <value>Record(s) deleted successfully.</value>
  </data>
  <data name="DeleteFail" xml:space="preserve">
    <value>Failed to delete record.</value>
  </data>
  <data name="DeleteRecord" xml:space="preserve">
    <value>Delete selected record?</value>
  </data>
  <data name="DeleteSuccess" xml:space="preserve">
    <value>Record deleted successfully.</value>
  </data>
  <data name="Exception" xml:space="preserve">
    <value>There was some problem processing your request, Please try after some time.</value>
  </data>
  <data name="InputInvalid" xml:space="preserve">
    <value>Please enter valid</value>
  </data>
  <data name="InputRequired" xml:space="preserve">
    <value>Please enter the </value>
  </data>
  <data name="InputSelect" xml:space="preserve">
    <value>Please select </value>
  </data>
  <data name="InsertAllFail" xml:space="preserve">
    <value>Failed to save record(s).</value>
  </data>
  <data name="InsertAllSuccess" xml:space="preserve">
    <value>Record(s) saved successfully.</value>
  </data>
  <data name="InsertFail" xml:space="preserve">
    <value>Failed to save record.</value>
  </data>
  <data name="InsertSuccess" xml:space="preserve">
    <value>Record saved successfully.</value>
  </data>
  <data name="InvalidCode" xml:space="preserve">
    <value>Invalid Verification Code.</value>
  </data>
  <data name="InvalidPassword" xml:space="preserve">
    <value>Invalid Password. Try again!</value>
  </data>
  <data name="InvalidUsername" xml:space="preserve">
    <value>Invalid Username. Try again!</value>
  </data>
  <data name="NoteMissing" xml:space="preserve">
    <value>You  Should Add Note</value>
  </data>
  <data name="NotFound" xml:space="preserve">
    <value>No record found.</value>
  </data>
  <data name="NotLoggedIn" xml:space="preserve">
    <value>You are not logged in or your login session expired, Please login again.</value>
  </data>
  <data name="PermissionDenied" xml:space="preserve">
    <value>You don't have permission, Access denied.</value>
  </data>
  <data name="Records" xml:space="preserve">
    <value>{0} to {1}  of {2} Record(s)</value>
  </data>
  <data name="SelectAllFail" xml:space="preserve">
    <value>Failed to get record(s).</value>
  </data>
  <data name="SelectFail" xml:space="preserve">
    <value>Failed to get record.</value>
  </data>
  <data name="SelectRecord" xml:space="preserve">
    <value>Please select atleast one record.</value>
  </data>
  <data name="UpdateAllFail" xml:space="preserve">
    <value>Failed to update record(s).</value>
  </data>
  <data name="UpdateAllSuccess" xml:space="preserve">
    <value>Record(s) updated successfully.</value>
  </data>
  <data name="UpdateFail" xml:space="preserve">
    <value>Failed to update record.</value>
  </data>
  <data name="UpdateSuccess" xml:space="preserve">
    <value>Record updated successfully.</value>
  </data>
  <data name="UserDisabled" xml:space="preserve">
    <value>User is disabled by administrator.</value>
  </data>
  <data name="UserLocked" xml:space="preserve">
    <value>User is locked.</value>
  </data>
</root>